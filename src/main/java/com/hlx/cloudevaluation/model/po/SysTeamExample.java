package com.hlx.cloudevaluation.model.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SysTeamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public SysTeamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTeamIdIsNull() {
            addCriterion("team_id is null");
            return (Criteria) this;
        }

        public Criteria andTeamIdIsNotNull() {
            addCriterion("team_id is not null");
            return (Criteria) this;
        }

        public Criteria andTeamIdEqualTo(Integer value) {
            addCriterion("team_id =", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotEqualTo(Integer value) {
            addCriterion("team_id <>", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThan(Integer value) {
            addCriterion("team_id >", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_id >=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThan(Integer value) {
            addCriterion("team_id <", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThanOrEqualTo(Integer value) {
            addCriterion("team_id <=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdIn(List<Integer> values) {
            addCriterion("team_id in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotIn(List<Integer> values) {
            addCriterion("team_id not in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdBetween(Integer value1, Integer value2) {
            addCriterion("team_id between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotBetween(Integer value1, Integer value2) {
            addCriterion("team_id not between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNull() {
            addCriterion("team_name is null");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNotNull() {
            addCriterion("team_name is not null");
            return (Criteria) this;
        }

        public Criteria andTeamNameEqualTo(String value) {
            addCriterion("team_name =", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotEqualTo(String value) {
            addCriterion("team_name <>", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThan(String value) {
            addCriterion("team_name >", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThanOrEqualTo(String value) {
            addCriterion("team_name >=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThan(String value) {
            addCriterion("team_name <", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThanOrEqualTo(String value) {
            addCriterion("team_name <=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLike(String value) {
            addCriterion("team_name like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotLike(String value) {
            addCriterion("team_name not like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameIn(List<String> values) {
            addCriterion("team_name in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotIn(List<String> values) {
            addCriterion("team_name not in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameBetween(String value1, String value2) {
            addCriterion("team_name between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotBetween(String value1, String value2) {
            addCriterion("team_name not between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamTokenIsNull() {
            addCriterion("team_token is null");
            return (Criteria) this;
        }

        public Criteria andTeamTokenIsNotNull() {
            addCriterion("team_token is not null");
            return (Criteria) this;
        }

        public Criteria andTeamTokenEqualTo(String value) {
            addCriterion("team_token =", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenNotEqualTo(String value) {
            addCriterion("team_token <>", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenGreaterThan(String value) {
            addCriterion("team_token >", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenGreaterThanOrEqualTo(String value) {
            addCriterion("team_token >=", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenLessThan(String value) {
            addCriterion("team_token <", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenLessThanOrEqualTo(String value) {
            addCriterion("team_token <=", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenLike(String value) {
            addCriterion("team_token like", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenNotLike(String value) {
            addCriterion("team_token not like", value, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenIn(List<String> values) {
            addCriterion("team_token in", values, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenNotIn(List<String> values) {
            addCriterion("team_token not in", values, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenBetween(String value1, String value2) {
            addCriterion("team_token between", value1, value2, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamTokenNotBetween(String value1, String value2) {
            addCriterion("team_token not between", value1, value2, "teamToken");
            return (Criteria) this;
        }

        public Criteria andTeamLimitIsNull() {
            addCriterion("team_limit is null");
            return (Criteria) this;
        }

        public Criteria andTeamLimitIsNotNull() {
            addCriterion("team_limit is not null");
            return (Criteria) this;
        }

        public Criteria andTeamLimitEqualTo(Integer value) {
            addCriterion("team_limit =", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitNotEqualTo(Integer value) {
            addCriterion("team_limit <>", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitGreaterThan(Integer value) {
            addCriterion("team_limit >", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_limit >=", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitLessThan(Integer value) {
            addCriterion("team_limit <", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitLessThanOrEqualTo(Integer value) {
            addCriterion("team_limit <=", value, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitIn(List<Integer> values) {
            addCriterion("team_limit in", values, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitNotIn(List<Integer> values) {
            addCriterion("team_limit not in", values, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitBetween(Integer value1, Integer value2) {
            addCriterion("team_limit between", value1, value2, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("team_limit not between", value1, value2, "teamLimit");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainIsNull() {
            addCriterion("team_captain is null");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainIsNotNull() {
            addCriterion("team_captain is not null");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainEqualTo(Integer value) {
            addCriterion("team_captain =", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainNotEqualTo(Integer value) {
            addCriterion("team_captain <>", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainGreaterThan(Integer value) {
            addCriterion("team_captain >", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_captain >=", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainLessThan(Integer value) {
            addCriterion("team_captain <", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainLessThanOrEqualTo(Integer value) {
            addCriterion("team_captain <=", value, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainIn(List<Integer> values) {
            addCriterion("team_captain in", values, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainNotIn(List<Integer> values) {
            addCriterion("team_captain not in", values, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainBetween(Integer value1, Integer value2) {
            addCriterion("team_captain between", value1, value2, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamCaptainNotBetween(Integer value1, Integer value2) {
            addCriterion("team_captain not between", value1, value2, "teamCaptain");
            return (Criteria) this;
        }

        public Criteria andTeamTypeIsNull() {
            addCriterion("team_type is null");
            return (Criteria) this;
        }

        public Criteria andTeamTypeIsNotNull() {
            addCriterion("team_type is not null");
            return (Criteria) this;
        }

        public Criteria andTeamTypeEqualTo(Integer value) {
            addCriterion("team_type =", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeNotEqualTo(Integer value) {
            addCriterion("team_type <>", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeGreaterThan(Integer value) {
            addCriterion("team_type >", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_type >=", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeLessThan(Integer value) {
            addCriterion("team_type <", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeLessThanOrEqualTo(Integer value) {
            addCriterion("team_type <=", value, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeIn(List<Integer> values) {
            addCriterion("team_type in", values, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeNotIn(List<Integer> values) {
            addCriterion("team_type not in", values, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeBetween(Integer value1, Integer value2) {
            addCriterion("team_type between", value1, value2, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("team_type not between", value1, value2, "teamType");
            return (Criteria) this;
        }

        public Criteria andTeamExitIsNull() {
            addCriterion("team_exit is null");
            return (Criteria) this;
        }

        public Criteria andTeamExitIsNotNull() {
            addCriterion("team_exit is not null");
            return (Criteria) this;
        }

        public Criteria andTeamExitEqualTo(Boolean value) {
            addCriterion("team_exit =", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitNotEqualTo(Boolean value) {
            addCriterion("team_exit <>", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitGreaterThan(Boolean value) {
            addCriterion("team_exit >", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitGreaterThanOrEqualTo(Boolean value) {
            addCriterion("team_exit >=", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitLessThan(Boolean value) {
            addCriterion("team_exit <", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitLessThanOrEqualTo(Boolean value) {
            addCriterion("team_exit <=", value, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitIn(List<Boolean> values) {
            addCriterion("team_exit in", values, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitNotIn(List<Boolean> values) {
            addCriterion("team_exit not in", values, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitBetween(Boolean value1, Boolean value2) {
            addCriterion("team_exit between", value1, value2, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamExitNotBetween(Boolean value1, Boolean value2) {
            addCriterion("team_exit not between", value1, value2, "teamExit");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtIsNull() {
            addCriterion("team_create_at is null");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtIsNotNull() {
            addCriterion("team_create_at is not null");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtEqualTo(Date value) {
            addCriterion("team_create_at =", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtNotEqualTo(Date value) {
            addCriterion("team_create_at <>", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtGreaterThan(Date value) {
            addCriterion("team_create_at >", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("team_create_at >=", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtLessThan(Date value) {
            addCriterion("team_create_at <", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtLessThanOrEqualTo(Date value) {
            addCriterion("team_create_at <=", value, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtIn(List<Date> values) {
            addCriterion("team_create_at in", values, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtNotIn(List<Date> values) {
            addCriterion("team_create_at not in", values, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtBetween(Date value1, Date value2) {
            addCriterion("team_create_at between", value1, value2, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamCreateAtNotBetween(Date value1, Date value2) {
            addCriterion("team_create_at not between", value1, value2, "teamCreateAt");
            return (Criteria) this;
        }

        public Criteria andTeamEditIsNull() {
            addCriterion("team_edit is null");
            return (Criteria) this;
        }

        public Criteria andTeamEditIsNotNull() {
            addCriterion("team_edit is not null");
            return (Criteria) this;
        }

        public Criteria andTeamEditEqualTo(Boolean value) {
            addCriterion("team_edit =", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditNotEqualTo(Boolean value) {
            addCriterion("team_edit <>", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditGreaterThan(Boolean value) {
            addCriterion("team_edit >", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditGreaterThanOrEqualTo(Boolean value) {
            addCriterion("team_edit >=", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditLessThan(Boolean value) {
            addCriterion("team_edit <", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditLessThanOrEqualTo(Boolean value) {
            addCriterion("team_edit <=", value, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditIn(List<Boolean> values) {
            addCriterion("team_edit in", values, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditNotIn(List<Boolean> values) {
            addCriterion("team_edit not in", values, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditBetween(Boolean value1, Boolean value2) {
            addCriterion("team_edit between", value1, value2, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamEditNotBetween(Boolean value1, Boolean value2) {
            addCriterion("team_edit not between", value1, value2, "teamEdit");
            return (Criteria) this;
        }

        public Criteria andTeamClassIsNull() {
            addCriterion("team_class is null");
            return (Criteria) this;
        }

        public Criteria andTeamClassIsNotNull() {
            addCriterion("team_class is not null");
            return (Criteria) this;
        }

        public Criteria andTeamClassEqualTo(Integer value) {
            addCriterion("team_class =", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassNotEqualTo(Integer value) {
            addCriterion("team_class <>", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassGreaterThan(Integer value) {
            addCriterion("team_class >", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_class >=", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassLessThan(Integer value) {
            addCriterion("team_class <", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassLessThanOrEqualTo(Integer value) {
            addCriterion("team_class <=", value, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassIn(List<Integer> values) {
            addCriterion("team_class in", values, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassNotIn(List<Integer> values) {
            addCriterion("team_class not in", values, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassBetween(Integer value1, Integer value2) {
            addCriterion("team_class between", value1, value2, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamClassNotBetween(Integer value1, Integer value2) {
            addCriterion("team_class not between", value1, value2, "teamClass");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtIsNull() {
            addCriterion("team_update_at is null");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtIsNotNull() {
            addCriterion("team_update_at is not null");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtEqualTo(Date value) {
            addCriterion("team_update_at =", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtNotEqualTo(Date value) {
            addCriterion("team_update_at <>", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtGreaterThan(Date value) {
            addCriterion("team_update_at >", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("team_update_at >=", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtLessThan(Date value) {
            addCriterion("team_update_at <", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtLessThanOrEqualTo(Date value) {
            addCriterion("team_update_at <=", value, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtIn(List<Date> values) {
            addCriterion("team_update_at in", values, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtNotIn(List<Date> values) {
            addCriterion("team_update_at not in", values, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtBetween(Date value1, Date value2) {
            addCriterion("team_update_at between", value1, value2, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamUpdateAtNotBetween(Date value1, Date value2) {
            addCriterion("team_update_at not between", value1, value2, "teamUpdateAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtIsNull() {
            addCriterion("team_delete_at is null");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtIsNotNull() {
            addCriterion("team_delete_at is not null");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtEqualTo(Date value) {
            addCriterion("team_delete_at =", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtNotEqualTo(Date value) {
            addCriterion("team_delete_at <>", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtGreaterThan(Date value) {
            addCriterion("team_delete_at >", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtGreaterThanOrEqualTo(Date value) {
            addCriterion("team_delete_at >=", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtLessThan(Date value) {
            addCriterion("team_delete_at <", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtLessThanOrEqualTo(Date value) {
            addCriterion("team_delete_at <=", value, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtIn(List<Date> values) {
            addCriterion("team_delete_at in", values, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtNotIn(List<Date> values) {
            addCriterion("team_delete_at not in", values, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtBetween(Date value1, Date value2) {
            addCriterion("team_delete_at between", value1, value2, "teamDeleteAt");
            return (Criteria) this;
        }

        public Criteria andTeamDeleteAtNotBetween(Date value1, Date value2) {
            addCriterion("team_delete_at not between", value1, value2, "teamDeleteAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_team
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_team
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}